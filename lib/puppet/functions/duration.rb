# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#       Returns a time duration in nanoseconds from a non-ambigious time specification
#    like 2h3m4s for 2 hours, 3 minutes and 4 seconds.
#    Valid time units are "ns", "us", "ms", "s", "m", "h".
#
#
Puppet::Functions.create_function(:'duration') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    input = args[0]

    raise Puppet::ParseError, ("duration(): wrong number of arguments (#{args.length}; must be 1)") if args.length != 1

    tokens = {
      "ns" => 1,
      "us" => 1 * 1000,
      "ms" => 1 * 1000 * 1000,
      "s" => 1 * 1000 * 1000 * 1000,
      "m" => (60) * 1000 * 1000 * 1000,
      "h" => (60 * 60) * 1000 * 1000 * 1000,
    }

    if /^(((\d+)([a-z]+))+|0)$/ !~ input
      raise Puppet::ParseError, ("duration(): no units specified (#{input}; should be in the form 2h3m4s for 2 hours, 3 minutes and 4 seconds)")
    end

    nanoseconds = 0
    if input != "0"
      input.scan(/(\d+)([a-z]+)/).each do |amount, measure|
        nanoseconds += amount.to_i * tokens[measure]
      end
    end
    nanoseconds
  
  end
end
